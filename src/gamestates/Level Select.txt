
Function for choosing leveSelect-layout:

	if !firstPlayThrough && (path3Visited || hasEnding3 || hasEnding2) {
		setLayout(3)
	} else if (hasEnding1) {
		setLayout(2)
	} else {
		setLayout(1)
	}


DISPLAYING LEVELS IN LAYOUTS:
	
  * First layout:
	.Just take whatever level is unlocked, and put it in a list.
	.E.g [level1, level6, level7, level4, level5]
	.Display the levels in that order.
	.Player can move cursor back and forth, but can only choose the next level.

  * Second layout:
	.In this state, we know the player has finished the game only once, and only beaten 5 levels.
	.We also know that path3 has not been visited. 
	.Each level will have a unique position on the 'grid'
	.This can be acchieved with a 2D list, which represents the 2 paths:
	      [ 6,  7,  8,  9]
	    [1, 2,  3,  4,  5]
	.level 1 has to be drawn with a different y-coordinate.
	.If the level.isAvailable(), draw it. If !level.isAvailable() = cannot choose it.
	.Player can move cursor back, forth, up and down, and can choose any available level.


  * Third layout:
	.Each level will have a unique position on the 'grid'
	.This can be acchieved with a 2D list, which represents the 3 paths:
	      [10, 11, 12, 13]
	   [1,  6,  7,  8,  9]
	      [ 2,  3,  4,  5]
	.Start the drawing from the right, with the same x-positition for all 3 paths.
	.Similar cursor movement as in second layout.
	.If the level.isAvailable(), draw it. If !level.isAvailable() = cannot choose it.
	 